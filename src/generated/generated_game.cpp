func void input();
func void update();
func void render(float interp_dt, float delta);
func f64 get_seconds();
func void on_gl_error(const char* expr, char* file, int line, int error);
func void draw_rect(s_v2 pos, s_v2 size, s_v4 color);
func void draw_rect_topleft(s_v2 pos, s_v2 size, s_v4 color);
func void draw_texture_screen(s_v2 pos, s_v2 size, s_v4 color, e_texture texture_id, e_shader shader_id, s_v2 uv_min, s_v2 uv_max);
func void draw_mesh(e_mesh mesh_id, s_m4 model, s_v4 color, e_shader shader_id);
func void draw_mesh(e_mesh mesh_id, s_v3 pos, s_v3 size, s_v4 color, e_shader shader_id);
func void bind_framebuffer(u32 fbo);
func void clear_framebuffer_color(u32 fbo, s_v4 color);
func void clear_framebuffer_depth(u32 fbo);
func void render_flush(s_render_flush_data data, b8 reset_render_count);
template <typename t>
func void add_to_render_group(t data, e_shader shader_id, e_texture texture_id, e_mesh mesh_id);
func s_shader load_shader_from_file(char* file, s_linear_arena* arena);
func b8 do_button(s_len_str text, s_v2 pos, b8 centered);
func b8 do_bool_button(s_len_str text, s_v2 pos, b8 centered, b8* out);
func b8 is_key_pressed(int key, b8 consume);
func b8 is_key_down(int key);
template <int n>
func void cstr_into_builder(s_str_builder<n>* builder, char* str);
template <int n>
func s_len_str builder_to_len_str(s_str_builder<n>* builder);
template <int n>
func b8 handle_string_input(s_input_str<n>* str, float time);
func void handle_key_event(int key, b8 is_down, b8 is_repeat);
func void do_leaderboard();
func s_v2 get_rect_normal_of_closest_edge(s_v2 p, s_v2 center, s_v2 size);
func void load_map();
func void save_map(char* path);
func b8 is_valid_2d_index(s_v2i index, int x_count, int y_count);
func b8 check_action(float curr_time, float timestamp, float grace);
func void do_player_move(int movement_index, float movement, s_player* player);
func b8 can_we_teleport(s_v2 teleport_pos);
func void draw_atlas(s_v2 pos, s_v2 size, s_v2i index, s_v4 color);
func void draw_atlas_ex(s_v2 pos, s_v2 size, s_v2i index, s_v4 color, float rotation);
func void draw_atlas_topleft(s_v2 pos, s_v2 size, s_v2i index, s_v4 color);
func b8 has_upgrade(e_upgrade id);
func s_v2i get_tile_atlas_index(e_tile_type tile);
func int get_max_player_jumps();
func float get_player_movement_speed();
func int get_update_count_with_upgrades(int update_count);
func b8 are_we_immune();
func float get_max_loop_time();
func b8 tile_is_upgrade(e_tile_type type);
func void draw_circle(s_v2 pos, float radius, s_v4 color);
func void draw_light(s_v2 pos, float radius, s_v4 color);
func s_v2 get_upgrade_offset(float interp_dt);
func s_v2 get_player_spawn_pos();
func void start_restart(s_v2 pos);
func void do_screen_shake(float intensity);
func s_m4 get_player_view_matrix(s_v2 player_pos);
func s_m4 get_editor_view_matrix();
func b8 are_we_in_super_speed();
func void draw_player(s_v2 pos, float angle, s_draw_player dp, s_v4 color);
func s_draw_player get_player_draw_data();
func void add_timed_msg(s_len_str str, s_v2 pos);
